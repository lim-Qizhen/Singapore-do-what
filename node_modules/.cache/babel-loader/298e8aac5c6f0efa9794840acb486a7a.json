{"ast":null,"code":"var _jsxFileName = \"/Users/qizhen/Desktop/GA/Github/Singapore-do-what/src/components/DisplayMapClass.js\";\n// src/DisplayMapClass.js\nimport { map } from \"@here/maps-api-for-javascript\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DisplayMapClass extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      // The map instance to use during cleanup\n      map: null\n    };\n  }\n\n  componentDidMount() {\n    const H = window.H;\n    const platform = new H.service.Platform({\n      apikey: \"PQXjrqipEq_9dEtEbGpmnSBXUOOhjS20oZb1DrTlSY\"\n    });\n    const defaultLayers = platform.createDefaultLayers(); // Create an instance of the map\n\n    const map = new H.Map(this.mapRef.current, defaultLayers.vector.normal.map, {\n      // This map is centered over Singapore\n      center: {\n        lat: 1.34,\n        lng: 103.82\n      } // pixelRatio: window.devicePixelRatio || 1,\n\n    });\n    map.setZoom(11.35);\n    this.setState({\n      map\n    });\n  }\n\n  componentDidUpdate() {\n    const H = window.H; //removes all previous ones in case of changes\n\n    this.state.map.removeObjects(this.state.map.getObjects());\n    console.log(this.props.plan);\n    this.props.plan.map((element, index) => {\n      // console.log(element);\n      if (element.activity.length > 1) {\n        console.log(element);\n\n        if (this.state.map.getObjects().some(marker => {\n          marker.b.lat === element.lat;\n        })) {\n          element.lat;\n        }\n\n        const svgMarkup = '<svg width=\"24\" height=\"24\" ' + 'xmlns=\"http://www.w3.org/2000/svg\">' + '<rect stroke=\"white\" fill=\"#1b468d\" x=\"1\" y=\"1\" width=\"22\" ' + 'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' + 'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' + `fill=\"white\">${index + 1}</text></svg>`;\n        const icon = new H.map.Icon(svgMarkup);\n        const coords = {\n          lat: element.lat,\n          lng: element.long\n        };\n        const marker = new H.map.Marker(coords, {\n          icon: icon\n        });\n        this.state.map.addObject(marker);\n        console.log(this.state.map.getObjects()[0].b.lat);\n        console.log(this.state.map.getObjects()[0].b.lng);\n      }\n    });\n  } //   componentWillUnmount() {\n  //     // Cleanup after the map to avoid memory leaks when this component exits the page\n  //     this.state.map.dispose();\n  //   }\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Set a height on the map so it will display\n      _jsxDEV(\"div\", {\n        ref: this.mapRef,\n        style: {\n          margin: \"0 auto\",\n          width: \"809px\",\n          height: \"500px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/qizhen/Desktop/GA/Github/Singapore-do-what/src/components/DisplayMapClass.js"],"names":["map","React","DisplayMapClass","Component","mapRef","createRef","state","componentDidMount","H","window","platform","service","Platform","apikey","defaultLayers","createDefaultLayers","Map","current","vector","normal","center","lat","lng","setZoom","setState","componentDidUpdate","removeObjects","getObjects","console","log","props","plan","element","index","activity","length","some","marker","b","svgMarkup","icon","Icon","coords","long","Marker","addObject","render","margin","width","height"],"mappings":"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","sourcesContent":["// src/DisplayMapClass.js\nimport { map } from \"@here/maps-api-for-javascript\";\nimport * as React from \"react\";\n\nexport class DisplayMapClass extends React.Component {\n  mapRef = React.createRef();\n\n  state = {\n    // The map instance to use during cleanup\n    map: null,\n  };\n\n  componentDidMount() {\n    const H = window.H;\n    const platform = new H.service.Platform({\n      apikey: \"PQXjrqipEq_9dEtEbGpmnSBXUOOhjS20oZb1DrTlSY\",\n    });\n\n    const defaultLayers = platform.createDefaultLayers();\n\n    // Create an instance of the map\n    const map = new H.Map(\n      this.mapRef.current,\n      defaultLayers.vector.normal.map,\n      {\n        // This map is centered over Singapore\n        center: { lat: 1.34, lng: 103.82 },\n        // pixelRatio: window.devicePixelRatio || 1,\n      }\n    );\n    map.setZoom(11.35);\n    this.setState({ map });\n  }\n\n  componentDidUpdate() {\n    const H = window.H;\n    //removes all previous ones in case of changes\n    this.state.map.removeObjects(this.state.map.getObjects());\n    console.log(this.props.plan);\n    this.props.plan.map((element, index) => {\n      // console.log(element);\n      if (element.activity.length > 1) {\n        console.log(element)\n        if (this.state.map.getObjects().some((marker) => {\n          marker.b.lat === element.lat\n        })){\n          element.lat\n        }\n        \n        const svgMarkup =\n        '<svg width=\"24\" height=\"24\" ' +\n        'xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<rect stroke=\"white\" fill=\"#1b468d\" x=\"1\" y=\"1\" width=\"22\" ' +\n        'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' +\n        'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' +\n        `fill=\"white\">${index + 1}</text></svg>`;\n        const icon = new H.map.Icon(svgMarkup);\n        const coords = { lat: element.lat, lng: element.long };\n        const marker = new H.map.Marker(coords, { icon: icon });\n        this.state.map.addObject(marker);\n        console.log(this.state.map.getObjects()[0].b.lat)\n        console.log(this.state.map.getObjects()[0].b.lng)\n      }\n    });\n  }\n\n  //   componentWillUnmount() {\n  //     // Cleanup after the map to avoid memory leaks when this component exits the page\n  //     this.state.map.dispose();\n  //   }\n\n  render() {\n    return (\n      // Set a height on the map so it will display\n      <div\n        ref={this.mapRef}\n        style={{ margin: \"0 auto\", width: \"809px\", height: \"500px\" }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}